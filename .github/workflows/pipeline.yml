name: Deployment pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  deployment_pipeline:
    runs-on: ubuntu-22.04
    env:
      VITE_URI: ${{vars.VITE_URI}}
      VITE_URL: ${{vars.VITE_URL}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Install dependencies
        run: npm install && cd graphql_server/ && npm install && cd ../graphql_frontend && npm install && cd ..
      - name: Check style
        run: cd graphql_server/ && npm run lint && cd ../graphql_frontend && npm run lint && cd ..
      - name: Build
        run: cd graphql_frontend && npm run build && cd ..
      - name: Unit test
        env: 
          MONGODB_URI: ${{secrets.MONGODB_URI}}
        run: cd graphql_server/ && npm run test && cd ../graphql_frontend && npm run test && cd ..
      - name: Install Playwright Browsers
        run:  npx playwright install --with-deps
      - name: Run Playwright tests
        env: 
          MONGODB_URI: ${{secrets.MONGODB_URI}}
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      - name: Trigger deployment
        if: ${{ github.event_name == 'push' }}
        env:
          ID_BACK: ${{secrets.RENDER_SERVICE_ID_BACK}}
          ID_FRONT: ${{secrets.RENDER_SERVICE_ID_FRONT}}
          API_BACK: ${{secrets.RENDER_API_KEY_BACK}}
          API_FRONT: ${{secrets.RENDER_API_KEY_FRONT}}
        run: curl https://api.render.com/deploy/srv-${{ env.ID_FRONT }}?key=${{ env.API_FRONT }} && curl https://api.render.com/deploy/srv-${{ env.ID_BACK }}?key=${{ env.API_BACK }}
      - name: Notify success
        env: 
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        uses: Ilshidur/action-discord@0c4b27844ba47cb1c7bee539c8eead5284ce9fa9
        if: success()
        with:
          args: "Successful build {{EVENT_PAYLOAD.repository.full_name}}"
      - name: Notify failure
        env: 
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        uses: Ilshidur/action-discord@0c4b27844ba47cb1c7bee539c8eead5284ce9fa9
        if: failure()
        with:
            args: "Build failure {{EVENT_PAYLOAD.repository.full_name}} at commit {{EVENT_PAYLOAD.after}}"
  
  tag_release:
    needs: [deployment_pipeline]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMIT_MESSAGES: ${{ join(github.event.commits.*.message, '') }}
          DEFAULT_BUMP: patch
        if: ${{ github.event_name == 'push' && !contains(env.COMMIT_MESSAGES, '#skip') }}
        uses: anothrNick/github-tag-action@f278d49d30cdd8775cc3e7dd00b5ee11686ee297
